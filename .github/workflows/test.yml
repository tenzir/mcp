name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        exclude:
          # Exclude some combinations to save CI time
          - os: macos-latest
            python-version: "3.10"
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "**/pyproject.toml"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync --all-extras --dev
    
    - name: Download documentation
      run: |
        uv run python scripts/download-docs.py
    
    - name: Lint with ruff
      run: |
        uv run ruff check src tests
      if: matrix.os == 'ubuntu-latest'
    
    - name: Format check with black
      run: |
        uv run black --check src tests
      if: matrix.os == 'ubuntu-latest'
    
    - name: Sort imports check with isort
      run: |
        uv run isort --check-only src tests
      if: matrix.os == 'ubuntu-latest'
    
    - name: Type check with mypy
      run: |
        uv run mypy src
      if: matrix.os == 'ubuntu-latest' && matrix.python-version != '3.13'
    
    - name: Test with pytest
      run: |
        uv run pytest

  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
    
    - name: Build package
      run: |
        uv build
        ls -la dist/
    
    - name: Check package metadata
      run: |
        uv venv
        uv pip install check-wheel-contents
        uv run check-wheel-contents dist/*.whl
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        retention-days: 7

  test-install:
    name: Test installation
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
    
    - name: Test installation
      run: |
        uv tool run --from dist/*.whl tenzir-mcp --help